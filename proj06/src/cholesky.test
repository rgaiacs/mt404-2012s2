Test chol_status is not possible beacuse "Python I/O will not catch I/O from
Fortran" (see http://osdir.com/ml/python.scientific.user/2003-10/msg00034.html)

Test show_chol is not possible beacuse "Python I/O will not catch I/O from
Fortran" (see http://osdir.com/ml/python.scientific.user/2003-10/msg00034.html)

    >>> import numpy
    >>> import cholesky

Test chol

From http://www.ee.ucla.edu/~vandenbe/103/lectures/chol.pdf

    >>> A = numpy.array([[25, 15, -5], [15, 18, 0], [-5, 0, 11]])
    >>> [A, s] = cholesky.chol(A, 3, 1e-8)
    >>> s
    0
    >>> A
    array([[  5.,  15.,  -5.],
           [  3.,   3.,   0.],
           [ -1.,   1.,   3.]])

From http://ocw.mit.edu/courses/mathematics/18-335j-introduction-to-numerical-methods-fall-2004/lecture-notes/lecture12.pdf

    >>> A = numpy.array([[1, 2, 3], [2, 13, 18], [3, 18, 50]])
    >>> [A, s] = cholesky.chol(A, 3, 1e-8)
    >>> s
    0
    >>> A
    array([[  1.,   2.,   3.],
           [  2.,   3.,  18.],
           [  3.,   4.,   5.]])

Test solve_with_chol

From http://ahmad.mech-research.com/TA/Files/Numeric/assign2.pdf

    >>> A = numpy.array([[9, 3, 3, 3],
    ...                  [3, 10, -2, -2],
    ...                  [3, -2, 18, 10],
    ...                  [3, -2, 10, 10]])
    >>> b = numpy.array([24, 17, 45, 29])
    >>> [A, x, s] = cholesky.solve_with_chol(A, b, 4, 1e-8)
    >>> s
    0
    >>> x
    array([ 1.,  2.,  2.,  1.])
